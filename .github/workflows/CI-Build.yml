# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Fortify Static Code Analyzer SAST Scan

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
#    - name: Build with Maven
#      run: mvn -B package --file pom.xml
    - name: Fortify SAST Translate (Sourcecodeanalyzer)
      run: sourceanalyzer -b dvja .
    - name: Fortify SAST Scan (Sourcecodeanalyzer)
      run: sourceanalyzer -b dvja -scan -f MyResults.fpr
    - name: Upload FPR to Fortify SSC
      run: fortifyclient uploadFPR -url http://fortify-linux:8080/ -authtoken 3c7444a3-8b14-460c-8a1a-0254c1a6dee0 -application DVJA  -applicationVersion 1.0 -file MyResults.fpr
    - name: Export Results
      uses: fortify/gha-export-vulnerabilities@v1
      with:
        ssc_base_url: "http://fortify-linux:8080"
        ssc_auth_token: "f1d1430f-24da-4111-8693-3f7e53c27a76"
        ssc_version_id: 6

    # Import Fortify SAST results to GitHub Security Code Scanning
    - name: Import Results
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ./gh-fortify-sast.sarif
